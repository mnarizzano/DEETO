function out=niftiTools2spm(nii,hold,voxdim, bbox)
% convert nifti tools format image to SPM format
% Hold: type of interpolation use for loading
% A Blenkmann 2017

if nargin<2
    hold = 4; % 4th order spline interpolation
end
if nargin<3
    voxdim=[NaN NaN NaN];
end
if nargin<4
    bbox=nan(2,3);
end

file=[nii.fileprefix '.nii'];
[PathName,name,ext] = fileparts(file); 
try
    disp(['Atempting to load image files using new SPM functions...']);
    
    [out,~]=loading_images_SPM([PathName filesep],[name ext],hold,voxdim, bbox);
catch
    disp(['File '  file ' not found ...' ]);
    disp(['Building vol information from old image struture ']);
%     disp(['Information is incomplete and may cause issues in the future.']);
%     disp(['']);
%     disp(['We recomend to export the electrodes (.mat file).']);
%     disp(['Then make a new project, load the images from scratch']);
%     disp(['and finally import the electrodes again.']);
%     disp(['Sorry for the inconviniences.']);

    % make a temporary nii 
    tempname=name;
    
    if exist([pwd filesep tempname ext],'file')
       tempname=int2str(rand(1)*10^20); %20 char rand name '
    end
    save_nii(nii,[pwd filesep tempname ext]);
    
    [out,~]=loading_images_SPM([pwd filesep],[tempname ext],hold,voxdim, bbox);
    if exist([pwd filesep tempname ext],'file')
        delete([pwd filesep tempname ext]);
    end
    if exist([pwd filesep 'r' tempname ext],'file')
        delete([pwd filesep 'r' tempname ext])
    end
end
    
    
    
%     vol.fname    = [nii.fileprefix '.nii'];
%     vol.dim(1:3) = size(nii.img);
%     
%     % get transfomation matrix
%     if nii.hdr.hist.sform_code>0
%         % get sform spatial transformations
%         vol.mat=[nii.hdr.hist.srow_x; nii.hdr.hist.srow_y; nii.hdr.hist.srow_z];
%     elseif nii.hdr.hist.qform_code>0
%         % qform not implemented
%         error('please convert images to sform')
%     else
%         vol.mat=[diag(abs(nii.hdr.dime.pixdim(2:4))), (-nii.hdr.hist.originator(1:3).*abs(nii.hdr.dime.pixdim(2:4)))'];
%     end
%     vol.mat=[vol.mat; 0 0 0 1];
%     out.vol=vol;
%     out.img=nii.img;
%     nii.img=[];
%     out.old_nii_structure=nii; %saving old structure here
% end